require(settings.get("ghu.base").."core/apis/ghu")local a;if arg[1]~=nil then if arg[1]=="term"then a=term else a=peripheral.wrap(arg[1])end else a=term end;local b=require("am.ui")local c,d=a.getSize()local e=0;local f=b.UILoop()local g=b.Screen(a,{textColor=colors.white,backgroundColor=colors.black})g:add(b.ProgressBar(b.a.TopLeft(),{width=math.floor(c/2),progressVertical=true,fillColor=colors.lightGray,fillHorizontal=false,labelAnchor=b.a.Bottom(),id="progress"}))local h=b.Frame(b.a.TopRight(),{width=math.floor(c/2),fillVertical=true,padLeft=2,id="frame"})h.borderColor=nil;h:add(b.Text(b.a.Top(),"Event"))h:add(b.Text(b.a.Center(2),"",{id="eventText"}))h:add(b.Text(b.a.Center(3),"",{id="eventArgsText"}))local i=b.Button(b.a.Center(8),string.format("Disabled (%d)",e),{fillColor=colors.blue,disabled=true,id="count",bubble=false})h:add(i)local j=b.Button(b.a.Center(5,b.c.Offset.Right),"+",{fillColor=colors.green,id="addButton"})j:addActivateHandler(function(k,l)e=math.min(100,e+1)i:updateLabel(l,string.format("Disabled (%d)",e))local m=g:get("progress")m:update(e)end)h:add(j)local n=b.Button(b.a.Center(5,b.c.Offset.Left),"-",{fillColor=colors.yellow,textColor=colors.black,id="removeButton"})n:addActivateHandler(function(k,l)e=math.max(0,e-1)i:updateLabel(l,string.format("Disabled (%d)",e))local m=g:get("progress")m:update(e)end)h:add(n)local o=b.Button(b.a.Bottom(),"Exit",{id="exitButton",fillColor=colors.red})o:addActivateHandler(function()f:cancel()end)h:add(o)g:add(h)local function p()g:render()f:run(g)end;local function q()while f.running do local r=os.startTimer(5)local s={os.pullEvent()}if b.c.l.Events.UI[s[1]]then local t=g:get("eventText")local u=g:get("eventArgsText")if s[1]==b.c.e.Events.loop_cancel then t:update(s[1])u:update("")elseif s[1]==b.c.e.Events.button_activate then t:update(s[1])u:update(string.format("%s: %s",s[2].objId,s[2].touch))elseif s[1]==b.c.e.Events.button_deactivate then t:update(s[1])u:update(s[2].objId)elseif s[1]~=b.c.e.Events.text_update and s[1]~=b.c.e.Events.progress_update then local v=s[2]t:update(s[1])u:update(string.format("%s: %d, %d: %d",v.objId,v.x,v.y,v.clickArea))end end;os.cancelTimer(r)end end;parallel.waitForAll(p,q)a.clear()a.setCursorPos(1,1)
