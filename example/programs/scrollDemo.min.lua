require(settings.get("ghu.base").."core/apis/ghu")local a;if arg[1]~=nil then if arg[1]=="term"then a=term else a=peripheral.wrap(arg[1])end else a=term end;local b=require("am.ui")local c,d=a.getSize()local e=0;local f=b.UILoop()local g=b.Screen(a,{textColor=colors.white,backgroundColor=colors.black})local h=b.Frame(b.a.TopLeft(),{width=math.floor(c/2),height=34,fillColor=colors.lightGray,fillHorizontal=false,scrollBar=true,id="scrollFrame",scrollBarTrackColor=colors.blue,scrollBarButtonColor=colors.green,scrollBarDisabledColor=colors.red,padLeft=1,padTop=1})h:add(b.Text(b.a.Top(),"Top Text",{textColor=colors.black}))local i={}for j=5,25,1 do if j%5==0 then i[j-4]=string.format("y=%d",j)else i[j-4]=""end end;h:add(b.Text(b.a.Left(5),i,{textColor=colors.black}))h:add(b.Text(b.a.Bottom(),"Bottom Text",{textColor=colors.black}))g:add(h)local k=b.Frame(b.a.TopRight(),{width=math.floor(c/2),fillVertical=true,padLeft=2,id="frame",fillColor=colors.black})k.borderColor=nil;k:add(b.Text(b.a.Top(),"Event"))k:add(b.Text(b.a.Center(2),"",{id="eventText"}))k:add(b.Text(b.a.Center(3),"",{id="eventArgsText"}))local l=b.Button(b.a.Bottom(),"Exit",{id="exitButton",fillColor=colors.red})l:addActivateHandler(function()f:cancel()end)k:add(l)g:add(k)local function m()g:render()f:run(g)end;local n={[b.c.e.Events.text_update]=true,[b.c.e.Events.progress_update]=true}local function o()while f.running do local p=os.startTimer(5)local q={os.pullEvent()}if b.c.l.Events.UI[q[1]]then local r=g:get("eventText")if not n[q[1]]then r:update(q[1])local s=g:get("eventArgsText")if q[1]==b.c.e.Events.loop_cancel then s:update("")elseif q[1]==b.c.e.Events.button_activate then s:update(string.format("%s: %s",q[2].objId,q[2].touch))elseif q[1]==b.c.e.Events.button_deactivate then s:update(q[2].objId)elseif q[1]==b.c.e.Events.frame_scroll then s:update(string.format("%s: %d",q[2].objId,q[2].newScroll))elseif q[1]~=b.c.e.Events.text_update and q[1]~=b.c.e.Events.progress_update then local t=q[2]s:update(string.format("%s: %d, %d: %d",t.objId,t.x,t.y,t.clickArea))end end end;os.cancelTimer(p)end end;parallel.waitForAll(m,o)a.clear()a.setCursorPos(1,1)
