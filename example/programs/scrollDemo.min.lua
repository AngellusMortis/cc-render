require(settings.get("ghu.base").."core/apis/ghu")local a;if arg[1]~=nil then if arg[1]=="term"then a=term else a=peripheral.wrap(arg[1])end else a=term end;local b=require("am.ui")local c,d=a.getSize()local e=0;local f=b.UILoop()local g=b.Screen(a,{textColor=colors.white,backgroundColor=colors.black})local h=b.Frame(b.a.TopLeft(),{width=math.floor(c/2),height=34,fillColor=colors.lightGray,fillHorizontal=false,scrollBar=true,id="scrollFrame",scrollBarTrackColor=colors.blue,padLeft=1,padTop=1})h:add(b.Text(b.a.Top(),"Top Text",{textColor=colors.black}))h:add(b.Text(b.a.Left(5),"y=5",{textColor=colors.black}))h:add(b.Text(b.a.Left(10),"y=10",{textColor=colors.black}))h:add(b.Text(b.a.Left(15),"y=15",{textColor=colors.black}))h:add(b.Text(b.a.Left(20),"y=20",{textColor=colors.black}))h:add(b.Text(b.a.Left(25),"y=25",{textColor=colors.black}))h:add(b.Text(b.a.Bottom(),"Bottom Text",{textColor=colors.black}))g:add(h)local i=b.Frame(b.a.TopRight(),{width=math.floor(c/2),fillVertical=true,padLeft=2,id="frame"})i.borderColor=nil;i:add(b.Text(b.a.Top(),"Event"))i:add(b.Text(b.a.Center(2),"",{id="eventText"}))i:add(b.Text(b.a.Center(3),"",{id="eventArgsText"}))local j=b.Button(b.a.Bottom(),"Exit",{id="exitButton",fillColor=colors.red})j:addActivateHandler(function()f:cancel()end)i:add(j)g:add(i)local function k()g:render()f:run(g)end;local function l()while f.running do local m=os.startTimer(5)local n={os.pullEvent()}if b.c.l.Events.UI[n[1]]then local o=g:get("eventText")local p=g:get("eventArgsText")if n[1]==b.c.e.Events.loop_cancel then o:update(n[1])p:update("")elseif n[1]==b.c.e.Events.button_activate then o:update(n[1])p:update(string.format("%s: %s",n[2].objId,n[2].touch))elseif n[1]==b.c.e.Events.button_deactivate then o:update(n[1])p:update(n[2].objId)elseif n[1]==b.c.e.Events.frame_scroll then elseif n[1]~=b.c.e.Events.text_update and n[1]~=b.c.e.Events.progress_update then local q=n[2]o:update(n[1])p:update(string.format("%s: %d, %d: %d",q.objId,q.x,q.y,q.clickArea))end end;os.cancelTimer(m)end end;parallel.waitForAll(k,l)a.clear()a.setCursorPos(1,1)
