require(settings.get("ghu.base").."core/apis/ghu")local a;if arg[1]~=nil then if arg[1]=="term"then a=term else a=peripheral.wrap(arg[1])end else a=term end;local b=require("am.ui")local c,d=a.getSize()local e=b.UILoop()local f=b.Screen(a,{textColor=colors.white,backgroundColor=colors.black})local g=b.TabbedFrame(b.a.TopLeft(),{width=math.floor(c/2),fillVertical=true,fillColor=colors.lightGray,textColor=colors.black,tabFillColor=colors.gray,activeTabFillColor=colors.green,backgroundColor=colors.black,id="tabFrame",showTabs=true,tabPadTop=1})local h=g:getTab("main")h:add(b.Text(b.a.Top(),"main Tab"))local i=g:createTab("two")i:add(b.Text(b.a.Top(),"Tab 2"))local j=g:createTab("three")j:add(b.Text(b.a.Top(),"Tab 3"))f:add(g)local k=b.Frame(b.a.TopRight(),{width=math.floor(c/2),fillVertical=true,padLeft=2,id="frame",fillColor=colors.black,textColor=colors.white})k.borderColor=nil;k:add(b.Text(b.a.Top(),"Event"))k:add(b.Text(b.a.Center(2),"",{id="eventText"}))k:add(b.Text(b.a.Center(3),"",{id="eventArgsText"}))local l=b.Button(b.a.Bottom(),"Exit",{id="exitButton",fillColor=colors.red})l:addActivateHandler(function()e:cancel()end)k:add(l)f:add(k)local function m()f:render()e:run(f)end;local n={[b.c.e.Events.text_update]=true,[b.c.e.Events.progress_update]=true,[b.c.e.Events.tab_created]=true,[b.c.e.Events.tab_removed]=true,[b.c.e.Events.tab_label_update]=true,[b.c.e.Events.tab_change]=true}local function o()while e.running do local p=os.startTimer(5)local q={os.pullEvent()}if b.c.l.Events.UI[q[1]]then local r=f:get("eventText")if not n[q[1]]then r:update(q[1])end end;os.cancelTimer(p)end end;parallel.waitForAll(m,o)a.clear()a.setCursorPos(1,1)
