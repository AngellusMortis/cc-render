require(settings.get("ghu.base").."core/apis/ghu")local a;if arg[1]~=nil then if arg[1]=="term"then a=term else a=peripheral.wrap(arg[1])end else a=term end;local b=require("am.ui")local c,d=a.getSize()local e=b.UILoop()local f=b.Screen(a,{textColor=colors.white,backgroundColor=colors.black})local g=b.Frame(b.a.TopLeft(),{width=math.floor(c/2),height=34,fillColor=colors.lightGray,fillHorizontal=false,scrollBar=true,id="scrollFrame",scrollBarTrackColor=colors.blue,scrollBarButtonColor=colors.green,scrollBarDisabledColor=colors.red,padLeft=1,padTop=1})g:add(b.Text(b.a.Top(),"Top Text",{textColor=colors.black}))local h={}for i=5,25,1 do if i%5==0 then h[i-4]=string.format("y=%d",i)else h[i-4]=""end end;g:add(b.Text(b.a.Left(5),h,{textColor=colors.black}))g:add(b.Text(b.a.Bottom(),"Bottom Text",{textColor=colors.black}))f:add(g)local j=b.Frame(b.a.TopRight(),{width=math.floor(c/2),fillVertical=true,padLeft=2,id="frame",fillColor=colors.black})j.borderColor=nil;j:add(b.Text(b.a.Top(),"Event"))j:add(b.Text(b.a.Center(2),"",{id="eventText"}))j:add(b.Text(b.a.Center(3),"",{id="eventArgsText"}))local k=b.Button(b.a.Bottom(),"Exit",{id="exitButton",fillColor=colors.red})k:addActivateHandler(function()e:cancel()end)j:add(k)f:add(j)local function l()f:render()e:run(f)end;local m={[b.c.e.Events.text_update]=true,[b.c.e.Events.progress_update]=true}local function n()while e.running do local o=os.startTimer(5)local p={os.pullEvent()}if b.c.l.Events.UI[p[1]]then local q=f:get("eventText")if not m[p[1]]then q:update(p[1])local r=f:get("eventArgsText")if p[1]==b.c.e.Events.loop_cancel then r:update("")elseif p[1]==b.c.e.Events.button_activate then r:update(string.format("%s: %s",p[2].objId,p[2].touch))elseif p[1]==b.c.e.Events.button_deactivate then r:update(p[2].objId)elseif p[1]==b.c.e.Events.frame_scroll then r:update(string.format("%s: %d",p[2].objId,p[2].newScroll))elseif p[1]~=b.c.e.Events.text_update and p[1]~=b.c.e.Events.progress_update then local s=p[2]r:update(string.format("%s: %d, %d: %d",s.objId,s.x,s.y,s.clickArea))end end end;os.cancelTimer(o)end end;parallel.waitForAll(l,n)a.clear()a.setCursorPos(1,1)
