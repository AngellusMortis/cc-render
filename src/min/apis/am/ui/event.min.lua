local a=require("cc.expect")local b=require("am.ui.base")local c=require("am.ui.helpers")local d=require("am.ui.const")local e={}local f=b.BaseObject:extend("am.ui.e.BaseEvent")e.BaseEvent=f;function f:init(g)a.expect(1,g,"string")f.super.init(self)self.name=g;return self end;local h=f:extend("am.ui.e.LoopCancelEvent")e.LoopCancelEvent=h;function h:init(i)a.expect(1,i,"string")h.super.init(self,d.e.Events.loop_cancel)self.loopId=i;return self end;local j=f:extend("am.ui.e.UIEvent")e.UIEvent=j;function j:init(g,k,l)a.expect(1,g,"string")a.expect(2,k,"table")a.expect(3,l,"string")c.requireOutput(k)j.super.init(self,g)self.objId=l;if c.isTerm(k)then self.outputType="term"self.outputId=nil elseif c.isMonitor(k)then self.outputType="monitor"self.outputId=peripheral.getName(k)else k=c.getFrameScreen(k)self.outputType="frame"self.outputId=k.frameId end;return self end;local m=j:extend("am.ui.e.TextUpdateEvent")e.TextUpdateEvent=m;function m:init(k,l,n,o)a.expect(1,k,"table")a.expect(2,l,"string")a.expect(3,n,"string","table")a.expect(4,o,"string","table")c.requireOutput(k)m.super.init(self,d.e.Events.text_update,k,l)self.oldLabel=n;self.newLabel=o;return self end;local p=j:extend("am.ui.e.ProgressBarLabelUpdateEvent")e.ProgressBarLabelUpdateEvent=p;function p:init(k,l)a.expect(1,k,"table")a.expect(2,l,"string")c.requireOutput(k)p.super.init(self,d.e.Events.progress_label_update,k,l)self.oldLabel=nil;self.newLabel=nil;self.oldShowProgress=nil;self.newShowProgress=nil;self.oldShowPercent=nil;self.newShowPercent=nil;return self end;local q=j:extend("am.ui.e.ProgressBarUpdateEvent")e.ProgressBarUpdateEvent=q;function q:init(k,l,r,s)a.expect(1,k,"table")a.expect(2,l,"string")c.requireOutput(k)p.super.init(self,d.e.Events.progress_update,k,l)self.oldCurrent=r;self.newCurrent=s;return self end;local t=j:extend("am.ui.e.ButtonActivateEvent")e.ButtonActivateEvent=t;function t:init(k,l,u)a.expect(1,k,"table")a.expect(2,l,"string")a.expect(3,u,"boolean","nil")c.requireOutput(k)if u==nil then u=false end;t.super.init(self,d.e.Events.button_activate,k,l)self.touch=u;return self end;local v=j:extend("am.ui.ButtonDeactivateEvent")e.ButtonDeactivateEvent=v;function v:init(k,l)a.expect(1,k,"table")a.expect(2,l,"string")c.requireOutput(k)v.super.init(self,d.e.Events.button_deactivate,k,l)return self end;local w=j:extend("am.ui.e.FrameActivateEvent")e.FrameActivateEvent=w;function w:init(g,k,l,x,y,z)a.expect(1,g,"string")a.expect(2,k,"table")a.expect(3,l,"string")a.expect(4,x,"number")a.expect(5,y,"number")a.expect(6,z,"number")a.range(z,0,2)c.requireOutput(k)w.super.init(self,g,k,l)self.x=x;self.y=y;self.clickArea=z;return self end;local A=w:extend("am.ui.e.FrameTouchEvent")e.FrameTouchEvent=A;function A:init(k,l,x,y,z)a.expect(1,l,"string")a.expect(2,k,"table")a.expect(3,x,"number")a.expect(4,y,"number")a.expect(5,z,"number")a.range(z,0,2)c.requireOutput(k)A.super.init(self,d.e.Events.frame_touch,k,l,x,y,z)return self end;local B=w:extend("am.ui.e.FrameClickEvent")e.FrameClickEvent=B;function B:init(k,l,x,y,z,C)a.expect(1,k,"table")a.expect(2,l,"string")a.expect(3,x,"number")a.expect(4,y,"number")a.expect(5,z,"number")a.expect(6,C,"number")a.range(z,0,2)a.range(C,1,3)c.requireOutput(k)B.super.init(self,d.e.Events.frame_click,k,l,x,y,z)self.clickType=C;return self end;local D=w:extend("am.ui.e.FrameDeactivateEvent")e.FrameDeactivateEvent=D;function D:init(k,l,x,y,z,C)a.expect(1,k,"table")a.expect(2,l,"string")a.expect(3,x,"number")a.expect(4,y,"number")a.expect(5,z,"number")a.expect(6,C,"number")a.range(z,0,2)a.range(C,1,3)c.requireOutput(k)D.super.init(self,d.e.Events.frame_up,k,l,x,y,z)self.clickType=C;return self end;local E=j:extend("am.ui.e.FrameScrollEvent")e.FrameScrollEvent=E;function E:init(k,l,F,G)a.expect(1,k,"table")a.expect(2,l,"string")a.expect(3,F,"number")a.expect(4,G,"number")c.requireOutput(k)E.super.init(self,d.e.Events.frame_scroll,k,l)self.oldScroll=F;self.newScroll=G;return self end;local H=j:extend("am.ui.e.TabChangedEvent")e.TabChangedEvent=H;function H:init(k,l,I,J)a.expect(1,k,"table")a.expect(2,l,"string")a.expect(3,I,"string")a.expect(4,J,"string")c.requireOutput(k)H.super.init(self,d.e.Events.tab_change,k,l)self.oldTabId=I;self.newTabId=J;return self end;local K=j:extend("am.ui.e.TabCreatedEvent")e.TabChangedEvent=H;function K:init(k,l,L)a.expect(1,k,"table")a.expect(2,l,"string")a.expect(3,L,"string")c.requireOutput(k)H.super.init(self,d.e.Events.tab_created,k,l)self.tabId=L;return self end;local M=j:extend("am.ui.e.TabRemovedEvent")e.TabRemovedEvent=M;function M:init(k,l,L)a.expect(1,k,"table")a.expect(2,l,"string")a.expect(3,L,"string")c.requireOutput(k)M.super.init(self,d.e.Events.tab_removed,k,l)self.tabId=L;return self end;local N=j:extend("am.ui.e.TabLabelUpdatedEvent")e.TabLabelUpdatedEvent=m;function N:init(k,l,L,n,o)a.expect(1,k,"table")a.expect(2,l,"string")a.expect(4,L,"string")a.expect(4,n,"string","nil")a.expect(5,o,"string","nil")c.requireOutput(k)m.super.init(self,d.e.Events.tab_label_update,k,l)self.tabId=L;self.oldLabel=n;self.newLabel=o;return self end;return e
