local a=require("cc.expect")local b=require("cc.strings").ensure_width;local c=require("ext.object")local d=require("am.ui.helpers")local e=require("am.core")local f=require("am.ui.const")local g={}local h=1;local i={}local j=c:extend("am.ui.b.BaseObject")g.BaseObject=j;function j:init()j.super.init(self,{})getmetatable(self).__tostring=nil;return self end;local k=j:extend("am.ui.b.UIBoundObject")g.UIBoundObject=k;function k:init(l,m)a.expect(1,l,"table")a.expect(2,m,"table")d.requireOutput(l)d.requireUIObject(2,m)k.super.init(self)self.output=l;self.obj=m;return self end;function k:validate()self.obj:validate(self.output)end;function k:render()self.obj:render(self.output)end;function k:handle(n,...)local n,o=e.cleanEventArgs(n,...)a.expect(1,n,"string")return self.obj:handle(self.output,{n,table.unpack(o)})end;local p=j:extend("am.ui.b.UIObject")g.UIObject=p;g.UIObject.Bound=k;function p:init(q)q=q or{}p.super.init(self)a.field(q,"id","string","nil")if q.id==nil then q.id="ui"..tostring(h)h=h+1 end;if i[q.id]then error(q.id.." already exists")end;i[q.id]=true;self.id=q.id;self.visible=true;return self end;function p:validate(l)end;function p:render(l)a.expect(1,l,"table","nil")if l==nil then l=term end;d.requireOutput(l)self:validate(l)end;function p:handle(l,n,...)local n,o=e.cleanEventArgs(n,...)a.expect(1,l,"table")a.expect(2,n,"string")d.requireOutput(l)if n=="term_resize"or n=="monitor_resize"then self:render(l)end;return false end;function p:bind(l)a.expect(1,l,"table")return k(l,self)end;local r=j:extend("am.ui.b.ScreenPos")g.ScreenPos=r;function r:init(s,t)r.super.init(self)a.expect(1,s,"number")a.expect(2,t,"number")a.range(s,1)a.range(t,1)self.x=s;self.y=t;return self end;local u=j:extend("am.ui.FrameScreen")g.FrameScreen=u;function u:init(l,v,w,x,y,z,A,B,C)u.super.init(self)a.expect(1,l,"table")a.expect(2,v,"string")a.expect(3,w,"table")a.expect(4,x,"number")a.expect(5,y,"number")a.expect(6,z,"number","nil")a.expect(7,A,"number","nil")a.expect(8,B,"number")a.expect(9,C,"number")d.requireOutput(l)if not d.isPos(w)then error("basePos must be a ScreenPos")end;a.range(x,1)a.range(y,1)if z~=nil then a.range(z,1)end;if A~=nil then a.range(A,1)end;if B<0 then self.viewportStart=1;self.viewportEnd=y else self.viewportStart=1+B;self.viewportEnd=self.viewportStart+C-1 end;self.output=l;self.frameId=v;self.basePos=w;self.pos=g.ScreenPos(1,1)self.width=x;self.height=y;self.textColor=z;self.backgroundColor=A;self.currentScroll=B;return self end;function u:ccCompat()local D={}D._frameScreenRef=self;D.write=function(E)return self:write(E)end;D.clear=function()return self:clear()end;D.clearLine=function()return self:clearLine()end;D.getBackgroundColor=function()return self:getBackgroundColor()end;D.getBackgroundColour=function()return self:getBackgroundColor()end;D.getTextColor=function()return self:getTextColor()end;D.getTextColour=function()return self:getTextColor()end;D.getCursorBlink=function()return self:getCursorBlink()end;D.getSize=function()return self:getSize()end;D.getCursorPos=function()return self:getCursorPos()end;D.setBackgroundColor=function(F)return self:setBackgroundColor(F)end;D.setBackgroundColour=function(F)return self:setBackgroundColor(F)end;D.setTextColor=function(F)return self:setTextColor(F)end;D.setTextColour=function(F)return self:setTextColor(F)end;D.setCursorBlink=function(G)return self:setCursorBlink(G)end;D.setCursorPos=function(s,t)return self:setCursorPos(s,t)end;D.scroll=function(t)return self:scroll(t)end;D.isColor=function()return self:isColor()end;D.isColour=function()return self:isColor()end;D.blit=function(E,z,A)return self:blit(E,z,A)end;D.setPaletteColor=function(...)return self:setPaletteColor(...)end;D.setPaletteColour=function(...)return self:setPaletteColor(...)end;D.getPaletteColor=function(F)return self:getPaletteColor(F)end;D.getPaletteColour=function(F)return self:getPaletteColor(F)end;return D end;function u:addPadding(H,I,J,K)a.expect(1,H,"number")a.expect(2,I,"number")a.expect(3,J,"number")a.expect(4,K,"number")self.basePos.x=self.basePos.x+H;self.basePos.y=self.basePos.y+J;self.width=math.max(0,self.width-H-I)self.height=math.max(0,self.height-J-K)self.viewportEnd=self.viewportEnd-J-K end;function u:toAbsolutePos(s,t)local L=self.basePos.x+s-1;local M=self.basePos.y+t-1;if d.isFrameScreen(self.output)then return d.getFrameScreen(self.output):toAbsolutePos(L,M)end;return L,M end;function u:toRealtivePos(s,t)if d.isFrameScreen(self.output)then s,t=d.getFrameScreen(self.output):toRealtivePos(s,t)end;s=s-self.basePos.x+1;t=t-self.basePos.y+1;return s,t end;function u:write(E)if self.pos.y>self.height or self.pos.y<self.viewportStart or self.pos.y>self.viewportEnd then return end;if self.pos.x>self.width then return end;local N=self.width+1-self.pos.x;if#E>N then E=b(E,N)end;N=#E;self.output.setBackgroundColor(self:getBackgroundColor())self.output.setTextColor(self:getTextColor())self:setCursorPos(self.pos.x,self.pos.y)self.output.write(E)self.pos.x=self.pos.x+N end;function u:blit(E,z,A)local O=self:getBackgroundColor()local P=self:getTextColor()self:setBackgroundColor(A)self:setTextColor(z)self:write(E)self:setBackgroundColor(O)self:setTextColor(P)end;function u:clearLine()local Q=e.copy(self.pos)self:setBackgroundColor(self:getBackgroundColor())self:setCursorPos(1,Q.y)self:write(string.rep(" ",self.width))self:setCursorPos(Q.x,Q.y)end;function u:clear()local Q=e.copy(self.pos)self:setCursorPos(self.pos.x,self.viewportStart)for t=self.viewportStart,self.viewportEnd,1 do self:clearLine()self.pos.y=self.pos.y+1 end;self:setCursorPos(Q.x,Q.y)end;function u:getBackgroundColor()return d.getColor(self.backgroundColor,self.output.getBackgroundColor())end;function u:getTextColor()return d.getColor(self.textColor,self.output.getTextColor())end;function u:getCursorBlink()return self.output.getCursorBlink()end;function u:getSize()return self.width,self.height end;function u:getCursorPos()return self.pos.x,self.pos.y end;function u:setBackgroundColor(F)a.expect(1,F,"number")a.range(F,1)self.backgroundColor=F;self.output.setBackgroundColor(self.backgroundColor)end;function u:setTextColor(F)a.expect(1,F,"number")a.range(F,1)self.textColor=F;self.output.setTextColor(self.textColor)end;function u:setCursorBlink(G)a.expect(1,G,"bool")self.output.setCursorBlink(G)end;function u:setCursorPos(s,t)a.expect(1,s,"number")a.expect(2,t,"number")a.range(s,1)a.range(t,1)self.pos={x=s,y=t}if t<self.viewportStart or t>self.viewportEnd then return end;s=s-1;t=t-self.viewportStart;self.output.setCursorPos(self.basePos.x+s,self.basePos.y+t)end;function u:isColor()return self.output.isColor()end;function u:scroll(t)end;function u:setPaletteColor(...)self.output.setPaletteColor(...)end;function u:getPaletteColor(F)self.output.getPaletteColor(F)end;function u:getClickArea(s,t,H,I,J,K)local R=false;if s<1 then if s<1-H then return f.ClickArea.Border end;R=true elseif s>self.width then if s>self.width+I then return f.ClickArea.Border end;R=true end;if t<1 then if t<1-J then return f.ClickArea.Border end;R=true elseif t>self.height then if t>self.height+K then return f.ClickArea.Border end;R=true end;if R then return f.ClickArea.Padding end;return f.ClickArea.Screen end;return g
