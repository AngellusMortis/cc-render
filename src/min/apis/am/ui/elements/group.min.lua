local a=require("cc.expect")local b=require("am.core")local c=require("am.ui.base")local d=require("am.ui.helpers")local e=c.UIBoundObject:extend("am.ui.BoundGroup")function e:add(f)self.obj:add(f)end;function e:get(g)a.expect(1,g,"string")return self.obj:get(g,self.output)end;function e:setVisible(h)self.obj:setVisible(h)end;function e:remove(g)return self.obj:remove(g)end;function e:reset()self.obj:reset()end;local i=c.UIObject:extend("am.ui.Group")i.Bound=e;function i:init(j)j=j or{}a.field(j,"id","string","nil")i.super.init(self,j)self.i={}return self end;function i:add(f)a.expect(1,f,"table")d.requireUIObject(1,f)if d.isUIScreen(f)then error("Cannot nest Screen UIs")end;self.i[f.id]=f end;function i:get(g,k)a.expect(1,g,"string")a.expect(2,k,"table","nil")if k~=nil then d.requireOutput(k)end;if self.i[g]~=nil then return self.i[g]:bind(k)end;for l,f in pairs(self.i)do if f:has(i)then local m=f:get(g,k)if m~=nil then return m end end end;return nil end;function i:setVisible(h)a.expect(1,h,"boolean")self.visible=h;for l,f in pairs(self.i)do if f:has(i)then f:setVisible(h)else f.visible=h end end end;function i:remove(g)a.expect(1,g,"string")if self.i[g]~=nil then table.remove(self.i,g)return true end;for l,f in pairs(self.i)do if f:is(i)then local n=table.remove(f,g)if n then return true end end end;return false end;function i:reset()self.i={}end;function i:bind(k)return e(k,self)end;function i:render(k)if not self.visible then return end;a.expect(1,k,"table","nil")if k==nil then k=term end;local o=k.getTextColor()local p=k.getBackgroundColor()local q,r=k.getCursorPos()i.super.render(self,k)if self.i~=nil then for l,f in pairs(self.i)do f:render(k)end end;k.setTextColor(o)k.setBackgroundColor(p)k.setCursorPos(q,r)end;function i:handle(k,s,...)local s,t=b.cleanEventArgs(s,...)a.expect(1,k,"table")a.expect(2,s,"string")d.requireOutput(k)if s=="term_resize"or s=="monitor_resize"then self:render(k)return false end;if self.i~=nil then for l,f in pairs(self.i)do if f:handle(k,{s,table.unpack(t)})then return true end end end;return false end;return i
