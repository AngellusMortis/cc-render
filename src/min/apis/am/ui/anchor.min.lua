local a=require("cc.expect")local b=require("am.ui.base")local c=require("am.ui.const")local d=require("am.ui.helpers")local e={}local f=b.BaseObject:extend("am.ui.a.Anchor")e.Anchor=f;function f:init(g,h)f.super.init(self)a.expect(1,g,"number")a.expect(2,h,"number")a.range(g,1)a.range(h,1)self.x=g;self.y=h;return self end;function f:getXPos(i,j)return self.x end;function f:getYPos(i,k)return self.y end;function f:getPos(i,j,k)a.expect(1,i,"table")a.expect(2,j,"number")a.expect(3,k,"number")d.requireOutput(i)local g=self:getXPos(i,j)local h=self:getYPos(i,k)return b.ScreenPos(g,h)end;local l=f:extend("am.ui.a.Center")e.Center=l;function l:init(h,m,n)a.expect(1,h,"number")a.expect(2,m,"number","nil")a.expect(3,n,"number","nil")a.range(h,1)if m~=nil then a.range(m,1,2)end;if n==nil then n=1 end;a.range(n,1)l.super.init(self,1,h)self.offset=m;self.offsetAmount=n;return self end;function l:getXPos(i,j)a.expect(1,i,"table")a.expect(2,j,"number")d.requireOutput(i)local o,p=i.getSize()local q=o/2;if self.offset==nil then q=q-j/2 elseif self.offset==c.Offset.Left then q=q-j-self.offsetAmount elseif self.offset==c.Offset.Right then q=q+self.offsetAmount+1 end;if o%2==0 then q=math.ceil(q)end;return math.max(1,q+1)end;local r=l:extend("am.ui.a.Middle")e.Middle=r;function r:init()r.super.init(self,1)return self end;function r:getYPos(i,k)a.expect(1,i,"table")a.expect(2,k,"number")d.requireOutput(i)local p,s=i.getSize()return math.max(1,math.floor((s+1)/2-k/2))end;local t=l:extend("am.ui.a.Top")e.Top=t;function t:init(m,n)a.expect(1,m,"number","nil")a.expect(2,n,"number","nil")if m~=nil then a.range(m,1,2)end;t.super.init(self,1,m,n)return self end;local u=l:extend("am.ui.a.Bottom")e.Bottom=u;function u:init(m,n)a.expect(1,m,"number","nil")a.expect(2,n,"number","nil")if m~=nil then a.range(m,1,2)end;u.super.init(self,1,m,n)return self end;function u:getYPos(i,k)a.expect(1,i,"table")a.expect(2,k,"number")d.requireOutput(i)local p,s=i.getSize()return s-k+1 end;local v=f:extend("am.ui.a.Left")e.Left=v;function v:init(h,n)a.expect(1,h,"number")a.expect(2,n,"number","nil")a.range(h,1)if n==nil then n=0 else a.range(n,0)end;v.super.init(self,1,h)self.offsetAmount=0;return self end;function v:getXPos(i,j)return self.x+self.offsetAmount end;local w=v:extend("am.ui.a.TopLeft")e.TopLeft=w;function w:init(n)w.super.init(self,1,1,n)return self end;local x=v:extend("am.ui.a.BottomLeft")e.BottomLeft=x;function x:init(n)x.super.init(self,1,1,n)return self end;function x:getYPos(i,k)a.expect(1,i,"table")a.expect(2,k,"number")d.requireOutput(i)local p,s=i.getSize()return s-k+1 end;local y=f:extend("am.ui.a.Right")e.Right=y;function y:init(h,n)a.expect(1,h,"number")a.expect(2,n,"number","nil")a.range(h,1)if n==nil then n=0 else a.range(n,0)end;y.super.init(self,1,h)self.offsetAmount=n;return self end;function y:getXPos(i,j)a.expect(1,i,"table")a.expect(2,j,"number")d.requireOutput(i)local o,p=i.getSize()return math.max(1,o-j+1)-self.offsetAmount end;local z=y:extend("am.ui.a.TopRight")e.TopRight=z;function z:init(n)z.super.init(self,1,1,n)return self end;local A=y:extend("am.ui.a.BottomRight")e.BottomRight=A;function A:init(n)A.super.init(self,n)return self end;function A:getYPos(i,k)a.expect(1,i,"table")a.expect(2,k,"number")d.requireOutput(i)local p,s=i.getSize()return s-k+1 end;return e
