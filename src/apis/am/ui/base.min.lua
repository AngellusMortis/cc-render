local a=require("cc.expect")local b=require("ext.object")local c=require("am.ui.helpers")local d=require("am.core")local e={}local f=1;local g={}local h=b:extend("am.ui.b.BaseObject")e.BaseObject=h;function h:init()h.super.init(self,{})getmetatable(self).__tostring=nil;return self end;local i=h:extend("am.ui.b.UIObject")e.UIObject=i;function i:init(j)j=j or{}i.super.init(self)a.field(j,"id","string","nil")if j.id==nil then j.id="ui"..tostring(f)f=f+1 end;if g[j.id]then error(j.id.." already exists")end;g[j.id]=true;self.id=j.id;self.visible=true;return self end;function i:validate(k)end;function i:render(k)a.expect(1,k,"table","nil")if k==nil then k=term end;c.requireOutput(k)self:validate(k)end;function i:handle(k,l,...)local l,m=d.cleanEventArgs(l,...)a.expect(1,k,"table")a.expect(2,l,"string")c.requireOutput(k)if l=="term_resize"or l=="monitor_resize"then self:render(k)end;return false end;local n=h:extend("am.ui.b.ScreenPos")e.ScreenPos=n;function n:init(o,p)n.super.init(self)a.expect(1,o,"number")a.expect(2,p,"number")a.range(o,1)a.range(p,1)self.x=o;self.y=p;return self end;local q=h:extend("am.ui.FrameScreen")e.FrameScreen=q;function q:init(k,r,s,t,u,v,w)q.super.init(self)a.expect(1,k,"table")a.expect(2,r,"string")a.expect(3,s,"table")a.expect(4,t,"number")a.expect(5,u,"number")a.expect(6,v,"number","nil")a.expect(7,w,"number","nil")c.requireOutput(k)if not c.isPos(s)then error("basePos must be a ScreenPos")end;a.range(t,1)a.range(u,1)if v~=nil then a.range(v,1)end;if w~=nil then a.range(w,1)end;self.output=k;self.frameId=r;self.basePos=s;self.pos=e.ScreenPos(1,1)self.width=t;self.height=u;self.textColor=v;self.backgroundColor=w;return self end;function q:ccCompat()local x={}x._frameScreenRef=self;x.write=function(y)return self:write(y)end;x.clear=function()return self:clear()end;x.clearLine=function()return self:clearLine()end;x.getBackgroundColor=function()return self:getBackgroundColor()end;x.getBackgroundColour=function()return self:getBackgroundColor()end;x.getTextColor=function()return self:getTextColor()end;x.getTextColour=function()return self:getTextColor()end;x.getCursorBlink=function()return self:getCursorBlink()end;x.getSize=function()return self:getSize()end;x.getCursorPos=function()return self:getCursorPos()end;x.setBackgroundColor=function(z)return self:setBackgroundColor(z)end;x.setBackgroundColour=function(z)return self:setBackgroundColor(z)end;x.setTextColor=function(z)return self:setTextColor(z)end;x.setTextColour=function(z)return self:setTextColor(z)end;x.setCursorBlink=function(A)return self:setCursorBlink(A)end;x.setCursorPos=function(o,p)return self:setCursorPos(o,p)end;x.scroll=function(p)return self:scroll(p)end;x.isColor=function()return self:isColor()end;x.isColour=function()return self:isColor()end;x.blit=function(y,v,w)return self:blit(y,v,w)end;x.setPaletteColor=function(...)return self:setPaletteColor(...)end;x.setPaletteColour=function(...)return self:setPaletteColor(...)end;x.getPaletteColor=function(z)return self:getPaletteColor(z)end;x.getPaletteColour=function(z)return self:getPaletteColor(z)end;return x end;function q:addPadding(B,C,D,E)a.expect(1,B,"number")a.expect(2,C,"number")a.expect(3,D,"number")a.expect(4,E,"number")self.basePos.x=self.basePos.x+B;self.basePos.y=self.basePos.y+D;self.width=math.max(0,self.width-B-C)self.height=math.max(0,self.height-D-E)end;function q:toAbsolutePos(o,p)local F=self.basePos.x+o-1;local G=self.basePos.y+p-1;if c.isFrameScreen(self.output)then return c.getFrameScreen(self.output):toAbsolutePos(F,G)end;return F,G end;function q:toRealtivePos(o,p)if c.isFrameScreen(self.output)then o,p=c.getFrameScreen(self.output):toRealtivePos(o,p)end;o=o-self.basePos.x+1;p=p-self.basePos.y+1;return o,p end;function q:write(y)if self.pos.y>self.height then return end;self.output.setBackgroundColor(self:getBackgroundColor())self.output.setTextColor(self:getTextColor())self:setCursorPos(self.pos.x,self.pos.y)for H=1,#y,1 do local I=y:sub(H,H)if self.pos.x>self.width then return end;self.output.write(I)self.pos.x=self.pos.x+1 end end;function q:blit(y,v,w)local J=self:getBackgroundColor()local K=self:getTextColor()self:setBackgroundColor(w)self:setTextColor(v)self:write(y)self:setBackgroundColor(J)self:setTextColor(K)end;function q:clearLine()local L=d.copy(self.pos)self:setBackgroundColor(self:getBackgroundColor())self:setCursorPos(1,L.y)self:write(string.rep(" ",self.width))self:setCursorPos(L.x,L.y)end;function q:clear()local L=d.copy(self.pos)for p=1,self.height,1 do self:clearLine()self.pos.y=self.pos.y+1 end;self:setCursorPos(L.x,L.y)end;function q:getBackgroundColor()return c.getColor(self.backgroundColor,self.output.getBackgroundColor())end;function q:getTextColor()return c.getColor(self.textColor,self.output.getTextColor())end;function q:getCursorBlink()return self.output.getCursorBlink()end;function q:getSize()return self.width,self.height end;function q:getCursorPos()return self.pos.x,self.pos.y end;function q:setBackgroundColor(z)a.expect(1,z,"number")a.range(z,1)self.backgroundColor=z;self.output.setBackgroundColor(self.backgroundColor)end;function q:setTextColor(z)a.expect(1,z,"number")a.range(z,1)self.textColor=z;self.output.setTextColor(self.textColor)end;function q:setCursorBlink(A)a.expect(1,A,"bool")self.output.setCursorBlink(A)end;function q:setCursorPos(o,p)a.expect(1,o,"number")a.expect(2,p,"number")a.range(o,1,self.width)a.range(p,1,self.height)self.pos={x=o,y=p}o=o-1;p=p-1;self.output.setCursorPos(self.basePos.x+o,self.basePos.y+p)end;function q:isColor()return self.output.isColor()end;function q:scroll(p)error("Scrolling for Frame Not Supported")end;function q:setPaletteColor(...)self.output.setPaletteColor(...)end;function q:getPaletteColor(z)self.output.getPaletteColor(z)end;return e
