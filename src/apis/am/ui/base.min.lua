local a=require("cc.expect")local b=require("ext.object")local c=require("am.ui.helpers")local d=require("am.core")local e={}local f=1;local g={}local h=b:extend("am.ui.b.BaseObject")e.BaseObject=h;function h:init()h.super.init(self,{})getmetatable(self).__tostring=nil;return self end;local i=h:extend("am.ui.b.UIBoundObject")e.UIBoundObject=i;function i:init(j,k)a.expect(1,j,"table")a.expect(2,k,"table")c.requireOutput(j)c.requireUIObject(k)i.super.init(self)self.output=j;self.obj=k;return self end;function i:validate()self.obj:validate(self.output)end;function i:render()self.obj:render(self.output)end;function i:handle(l,...)local l,m=d.cleanEventArgs(l,...)a.expect(1,l,"string")return self.obj:handle(self.output,{l,unpack(m)})end;local n=h:extend("am.ui.b.UIObject")e.UIObject=n;function n:init(o)o=o or{}n.super.init(self)a.field(o,"id","string","nil")if o.id==nil then o.id="ui"..tostring(f)f=f+1 end;if g[o.id]then error(o.id.." already exists")end;g[o.id]=true;self.id=o.id;self.visible=true;return self end;function n:validate(j)end;function n:render(j)a.expect(1,j,"table","nil")if j==nil then j=term end;c.requireOutput(j)self:validate(j)end;function n:handle(j,l,...)local l,m=d.cleanEventArgs(l,...)a.expect(1,j,"table")a.expect(2,l,"string")c.requireOutput(j)if l=="term_resize"or l=="monitor_resize"then self:render(j)end;return false end;function n:bind(j)return i(j,self)end;local p=h:extend("am.ui.b.ScreenPos")e.ScreenPos=p;function p:init(q,r)p.super.init(self)a.expect(1,q,"number")a.expect(2,r,"number")a.range(q,1)a.range(r,1)self.x=q;self.y=r;return self end;local s=h:extend("am.ui.FrameScreen")e.FrameScreen=s;function s:init(j,t,u,v,w,x,y)s.super.init(self)a.expect(1,j,"table")a.expect(2,t,"string")a.expect(3,u,"table")a.expect(4,v,"number")a.expect(5,w,"number")a.expect(6,x,"number","nil")a.expect(7,y,"number","nil")c.requireOutput(j)if not c.isPos(u)then error("basePos must be a ScreenPos")end;a.range(v,1)a.range(w,1)if x~=nil then a.range(x,1)end;if y~=nil then a.range(y,1)end;self.output=j;self.frameId=t;self.basePos=u;self.pos=e.ScreenPos(1,1)self.width=v;self.height=w;self.textColor=x;self.backgroundColor=y;return self end;function s:ccCompat()local z={}z._frameScreenRef=self;z.write=function(A)return self:write(A)end;z.clear=function()return self:clear()end;z.clearLine=function()return self:clearLine()end;z.getBackgroundColor=function()return self:getBackgroundColor()end;z.getBackgroundColour=function()return self:getBackgroundColor()end;z.getTextColor=function()return self:getTextColor()end;z.getTextColour=function()return self:getTextColor()end;z.getCursorBlink=function()return self:getCursorBlink()end;z.getSize=function()return self:getSize()end;z.getCursorPos=function()return self:getCursorPos()end;z.setBackgroundColor=function(B)return self:setBackgroundColor(B)end;z.setBackgroundColour=function(B)return self:setBackgroundColor(B)end;z.setTextColor=function(B)return self:setTextColor(B)end;z.setTextColour=function(B)return self:setTextColor(B)end;z.setCursorBlink=function(C)return self:setCursorBlink(C)end;z.setCursorPos=function(q,r)return self:setCursorPos(q,r)end;z.scroll=function(r)return self:scroll(r)end;z.isColor=function()return self:isColor()end;z.isColour=function()return self:isColor()end;z.blit=function(A,x,y)return self:blit(A,x,y)end;z.setPaletteColor=function(...)return self:setPaletteColor(...)end;z.setPaletteColour=function(...)return self:setPaletteColor(...)end;z.getPaletteColor=function(B)return self:getPaletteColor(B)end;z.getPaletteColour=function(B)return self:getPaletteColor(B)end;return z end;function s:addPadding(D,E,F,G)a.expect(1,D,"number")a.expect(2,E,"number")a.expect(3,F,"number")a.expect(4,G,"number")self.basePos.x=self.basePos.x+D;self.basePos.y=self.basePos.y+F;self.width=math.max(0,self.width-D-E)self.height=math.max(0,self.height-F-G)end;function s:toAbsolutePos(q,r)local H=self.basePos.x+q-1;local I=self.basePos.y+r-1;if c.isFrameScreen(self.output)then return c.getFrameScreen(self.output):toAbsolutePos(H,I)end;return H,I end;function s:toRealtivePos(q,r)if c.isFrameScreen(self.output)then q,r=c.getFrameScreen(self.output):toRealtivePos(q,r)end;q=q-self.basePos.x+1;r=r-self.basePos.y+1;return q,r end;function s:write(A)if self.pos.y>self.height then return end;self.output.setBackgroundColor(self:getBackgroundColor())self.output.setTextColor(self:getTextColor())self:setCursorPos(self.pos.x,self.pos.y)for J=1,#A,1 do local K=A:sub(J,J)if self.pos.x>self.width then return end;self.output.write(K)self.pos.x=self.pos.x+1 end end;function s:blit(A,x,y)local L=self:getBackgroundColor()local M=self:getTextColor()self:setBackgroundColor(y)self:setTextColor(x)self:write(A)self:setBackgroundColor(L)self:setTextColor(M)end;function s:clearLine()local N=d.copy(self.pos)self:setBackgroundColor(self:getBackgroundColor())self:setCursorPos(1,N.y)self:write(string.rep(" ",self.width))self:setCursorPos(N.x,N.y)end;function s:clear()local N=d.copy(self.pos)for r=1,self.height,1 do self:clearLine()self.pos.y=self.pos.y+1 end;self:setCursorPos(N.x,N.y)end;function s:getBackgroundColor()return c.getColor(self.backgroundColor,self.output.getBackgroundColor())end;function s:getTextColor()return c.getColor(self.textColor,self.output.getTextColor())end;function s:getCursorBlink()return self.output.getCursorBlink()end;function s:getSize()return self.width,self.height end;function s:getCursorPos()return self.pos.x,self.pos.y end;function s:setBackgroundColor(B)a.expect(1,B,"number")a.range(B,1)self.backgroundColor=B;self.output.setBackgroundColor(self.backgroundColor)end;function s:setTextColor(B)a.expect(1,B,"number")a.range(B,1)self.textColor=B;self.output.setTextColor(self.textColor)end;function s:setCursorBlink(C)a.expect(1,C,"bool")self.output.setCursorBlink(C)end;function s:setCursorPos(q,r)a.expect(1,q,"number")a.expect(2,r,"number")a.range(q,1,self.width)a.range(r,1,self.height)self.pos={x=q,y=r}q=q-1;r=r-1;self.output.setCursorPos(self.basePos.x+q,self.basePos.y+r)end;function s:isColor()return self.output.isColor()end;function s:scroll(r)error("Scrolling for Frame Not Supported")end;function s:setPaletteColor(...)self.output.setPaletteColor(...)end;function s:getPaletteColor(B)self.output.getPaletteColor(B)end;return e
