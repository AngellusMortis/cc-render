local a=require("cc.expect")local b=require("ext.object")local c=require("am.ui.const")local d=require("am.core")local function e(f)a.expect(1,f,"table")if f._frameScreenRef~=nil and type(f._frameScreenRef)=="table"then f=f._frameScreenRef end;return f end;local function g(h,i)a.expect(1,h,"string")a.expect(2,i,"table")return b.has(i,h)~=false end;local function j(f)a.expect(1,f,"table")return f.redirect~=nil and f.current~=nil end;local function k(f)a.expect(1,f,"table")local l=getmetatable(f)if l==nil then return false end;return l.__name=="peripheral"and l.type=="monitor"end;local function m(f)a.expect(1,f,"table")f=e(f)return g("am.ui.FrameScreen",f)end;local function n(f)return j(f)or k(f)or m(f)end;local function o(f)if not n(f)then error("Not a terminal, monitor or frame")end end;local function p(i)a.expect(1,i,"table")if not g("am.ui.b.UIObject",i)then error("Not a UIObject")end end;local function q(i)a.expect(1,i,"table")return g("am.ui.b.UIObject",i)end;local function r(i)a.expect(1,i,"table")return g("am.ui.Screen",i)end;local function s(i)a.expect(1,i,"table")return g("am.ui.a.Anchor",i)end;local function t(i)a.expect(1,i,"table")return g("am.ui.b.ScreenPos",i)end;local function u(v,...)local v,w=d.cleanEventArgs(v,...)a.expect(1,v,"string")local f=nil;if c.l.Events.Terminal[v]then f=term elseif c.l.Events.Monitor[v]then f=peripheral.wrap(w[1])end;return f end;local function x(y,z)a.expect(1,y,"table")a.expect(2,z,"table","nil")if z==nil then return false end;local A=false;if j(y)and j(z)then A=true elseif k(y)and k(z)then A=peripheral.getName(y)==peripheral.getName(z)elseif m(y)and m(z)then y=e(y)z=e(z)A=y.id==z.id end;return A end;local function B(C,D,E)a.expect(1,C,"number","nil")a.expect(2,D,"number","nil")a.expect(3,E,"number","nil")if C~=nil then return C elseif D~=nil then return D elseif E~=nil then return E end;error("Could not determine color")end;local function F(f,G,H,I,J,K)f.setCursorPos(G.x,G.y)f.setTextColor(J)f.setBackgroundColor(K)f.write("\x9f"..string.rep("\x8f",H-2))f.setTextColor(K)f.setBackgroundColor(J)f.write("\x90")for L=1,I-2,1 do f.setCursorPos(G.x,G.y+L)f.setTextColor(J)f.setBackgroundColor(K)f.write("\x95")f.setCursorPos(G.x+H-1,G.y+L)f.setTextColor(K)f.setBackgroundColor(J)f.write("\x95")end;f.setCursorPos(G.x,G.y+I-1)f.setTextColor(K)f.setBackgroundColor(J)f.write("\x82"..string.rep("\x83",H-2).."\x81")end;local function M(f,G,H,I,J,K)f.setCursorPos(G.x,G.y)f.setTextColor(J)f.setBackgroundColor(K)f.write(string.rep("\x83",H))for L=1,I-1,1 do f.setCursorPos(G.x,G.y+L)f.setTextColor(J)f.setBackgroundColor(K)f.write(" ")f.setCursorPos(G.x+H-1,G.y+L)f.setTextColor(J)f.setBackgroundColor(K)f.write(" ")end;f.setCursorPos(G.x,G.y+I-1)f.setTextColor(K)f.setBackgroundColor(J)f.write(string.rep("\x8f",H))end;local function N(f,G,H,I,K)f.setBackgroundColor(K)f.setCursorPos(G.x,G.y)f.write(string.rep(" ",H))for L=1,I-2,1 do f.setCursorPos(G.x,G.y+L)f.write(" ")f.setCursorPos(G.x+H-1,G.y+L)f.write(" ")end;f.setCursorPos(G.x,G.y+I-1)f.write(string.rep(" ",H))end;local O={}O.isTerm=j;O.isMonitor=k;O.getFrameScreen=e;O.isFrameScreen=m;O.isOutput=n;O.requireOutput=o;O.getEventOutput=u;O.is=g;O.isUIObject=q;O.requireUIObject=p;O.isSameScreen=x;O.isUIScreen=r;O.isAnchor=s;O.isPos=t;O.getColor=B;O.renderBorder1=F;O.renderBorder2=M;O.renderBorder3=N;return O
