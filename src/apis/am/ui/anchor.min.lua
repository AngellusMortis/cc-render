local a=require("cc.expect")local b=require("am.ui.base")local c=require("am.ui.const")local d=require("am.ui.helpers")local e={}local f=b.BaseObject:extend("am.ui.a.Anchor")e.Anchor=f;function f:init(g,h)f.super.init(self)a.expect(1,g,"number")a.expect(2,h,"number")a.range(g,1)a.range(h,1)self.x=g;self.y=h;return self end;function f:getXPos(i,j)return self.x end;function f:getYPos(i,k)return self.y end;function f:getPos(i,j,k)a.expect(1,i,"table")a.expect(2,j,"number")a.expect(3,k,"number")d.requireOutput(i)local g=self:getXPos(i,j)local h=self:getYPos(i,k)return b.ScreenPos(g,h)end;local l=f:extend("am.ui.a.Center")e.Center=l;function l:init(h,m,offsetAmount)a.expect(1,h,"number")a.expect(2,m,"number","nil")a.expect(3,offsetAmount,"number","nil")a.range(h,1)if m~=nil then a.range(m,1,2)end;if offsetAmount==nil then offsetAmount=1 end;a.range(offsetAmount,1)l.super.init(self,1,h)self.offset=m;self.offsetAmount=offsetAmount;return self end;function l:getXPos(i,j)a.expect(1,i,"table")a.expect(2,j,"number")d.requireOutput(i)local n,o=i.getSize()local p=n/2;if self.offset==nil then p=p-j/2 elseif self.offset==c.Offset.Left then p=p-j-self.offsetAmount elseif self.offset==c.Offset.Right then p=p+self.offsetAmount+1 end;if n%2==0 then p=math.ceil(p)end;return math.max(1,p+1)end;local q=l:extend("am.ui.a.Middle")e.Middle=q;function q:init()q.super.init(self,1)return self end;function q:getYPos(i,k)a.expect(1,i,"table")a.expect(2,k,"number")d.requireOutput(i)local o,r=i.getSize()return math.max(1,math.floor((r+1)/2-k/2))end;local s=l:extend("am.ui.a.Top")e.Top=s;function s:init(m,offsetAmount)a.expect(1,m,"number","nil")a.expect(2,offsetAmount,"number","nil")if m~=nil then a.range(m,1,2)end;s.super.init(self,1,m,offsetAmount)return self end;local t=l:extend("am.ui.a.Bottom")e.Bottom=t;function t:init(m,offsetAmount)a.expect(1,m,"number","nil")a.expect(2,offsetAmount,"number","nil")if m~=nil then a.range(m,1,2)end;t.super.init(self,1,m,offsetAmount)return self end;function t:getYPos(i,k)a.expect(1,i,"table")a.expect(2,k,"number")d.requireOutput(i)local o,r=i.getSize()return r-k+1 end;local u=f:extend("am.ui.a.Left")e.Left=u;function u:init(h,offsetAmount)a.expect(1,h,"number")a.expect(2,offsetAmount,"number","nil")a.range(h,1)if offsetAmount==nil then offsetAmount=0 else a.range(offsetAmount,0)end;u.super.init(self,1,h)self.offsetAmount=0;return self end;function u:getXPos(i,j)return self.x+self.offsetAmount end;local v=u:extend("am.ui.a.TopLeft")e.TopLeft=v;function v:init(offsetAmount)v.super.init(self,1,1,offsetAmount)return self end;local w=u:extend("am.ui.a.BottomLeft")e.BottomLeft=w;function w:init()w.super.init(self,1,1,offsetAmount)return self end;function w:getYPos(i,k)a.expect(1,i,"table")a.expect(2,k,"number")d.requireOutput(i)local o,r=i.getSize()return r-k+1 end;local x=f:extend("am.ui.a.Right")e.Right=x;function x:init(h,offsetAmount)a.expect(1,h,"number")a.expect(2,offsetAmount,"number","nil")a.range(h,1)if offsetAmount==nil then offsetAmount=0 else a.range(offsetAmount,0)end;x.super.init(self,1,h)self.offsetAmount=offsetAmount;return self end;function x:getXPos(i,j)a.expect(1,i,"table")a.expect(2,j,"number")d.requireOutput(i)local n,o=i.getSize()return math.max(1,n-j+1)-self.offsetAmount end;local y=x:extend("am.ui.a.TopRight")e.TopRight=y;function y:init(offsetAmount)y.super.init(self,1,1,offsetAmount)return self end;local z=x:extend("am.ui.a.BottomRight")e.BottomRight=z;function z:init(offsetAmount)z.super.init(self,offsetAmount)return self end;function z:getYPos(i,k)a.expect(1,i,"table")a.expect(2,k,"number")d.requireOutput(i)local o,r=i.getSize()return r-k+1 end;return e
