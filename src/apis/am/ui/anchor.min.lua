local a=require("cc.expect")local b=require("am.ui.base")local c=require("am.ui.const")local d=require("am.ui.helpers")local e={}local f=b.BaseObject:extend("am.ui.a.Anchor")e.Anchor=f;function f:init(g,h)f.super.init(self)a.expect(1,g,"number")a.expect(2,h,"number")a.range(g,1)a.range(h,1)self.x=g;self.y=h;return self end;function f:getXPos(i,j)return self.x end;function f:getYPos(i,k)return self.y end;function f:getPos(i,j,k)a.expect(1,i,"table")a.expect(2,j,"number")a.expect(3,k,"number")d.requireOutput(i)local g=self:getXPos(i,j)local h=self:getYPos(i,k)return b.ScreenPos(g,h)end;local l=f:extend("am.ui.a.Left")e.Left=l;function l:init(h)a.expect(1,h,"number")a.range(h,1)l.super.init(self,1,h)return self end;local m=f:extend("am.ui.a.Right")e.Right=m;function m:init(h)a.expect(1,h,"number")a.range(h,1)m.super.init(self,1,h)return self end;function m:getXPos(i,j)a.expect(1,i,"table")a.expect(2,j,"number")d.requireOutput(i)local n,o=i.getSize()return math.max(1,n-j+1)end;local p=f:extend("am.ui.a.Center")e.Center=p;function p:init(h,q,r)a.expect(1,h,"number")a.expect(2,q,"number","nil")a.expect(3,r,"number","nil")a.range(h,1)if q~=nil then a.range(q,1,2)end;if r==nil then r=1 end;a.range(r,1)p.super.init(self,1,h)self.offset=q;self.offsetAmount=r;return self end;function p:getXPos(i,j)a.expect(1,i,"table")a.expect(2,j,"number")d.requireOutput(i)local n,o=i.getSize()local s=n/2;if self.offset==nil then s=s-j/2 elseif self.offset==c.Offset.Left then s=s-j-self.offsetAmount elseif self.offset==c.Offset.Right then s=s+self.offsetAmount+1 end;if n%2==0 then s=math.ceil(s)end;return math.max(1,s+1)end;local t=p:extend("am.ui.a.Middle")e.Middle=t;function t:init()t.super.init(self,1)return self end;function t:getYPos(i,k)a.expect(1,i,"table")a.expect(2,k,"number")d.requireOutput(i)local o,u=i.getSize()return math.max(1,math.floor((u+1)/2-k/2))end;local v=p:extend("am.ui.a.Top")e.Top=v;function v:init(q,r)a.expect(1,q,"number","nil")a.expect(2,r,"number","nil")if q~=nil then a.range(q,1,2)end;v.super.init(self,1,q,r)return self end;local w=p:extend("am.ui.a.Bottom")e.Bottom=w;function w:init(q,r)a.expect(1,q,"number","nil")a.expect(2,r,"number","nil")if q~=nil then a.range(q,1,2)end;w.super.init(self,1,q,r)return self end;function w:getYPos(i,k)a.expect(1,i,"table")a.expect(2,k,"number")d.requireOutput(i)local o,u=i.getSize()return u-k+1 end;local x=f:extend("am.ui.a.TopLeft")e.TopLeft=x;function x:init()x.super.init(self,1,1)return self end;local y=m:extend("am.ui.a.TopRight")e.TopRight=y;function y:init()y.super.init(self,1,1)return self end;local z=f:extend("am.ui.a.BottomLeft")e.BottomLeft=z;function z:init()z.super.init(self,1,1)return self end;function z:getYPos(i,k)a.expect(1,i,"table")a.expect(2,k,"number")d.requireOutput(i)local o,u=i.getSize()return u-k+1 end;local A=z:extend("am.ui.a.BottomRight")e.BottomRight=A;function A:init()A.super.init(self)return self end;function A:getXPos(i,j)a.expect(1,i,"table")a.expect(2,j,"number")d.requireOutput(i)local n,o=i.getSize()return n-j end;return e
