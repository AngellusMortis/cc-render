local a=require("cc.expect")local b=require("am.core")local c=require("am.text")local d=require("am.ui.base")local e=require("am.ui.const")local f=require("am.ui.event")local g=require("am.ui.helpers")local h=d.UIBoundObject:extend("am.ui.BoundText")function h:update(i)self.obj:update(self.output,i)end;local j=d.UIObject:extend("am.ui.Text")j.Bound=h;function j:init(k,i,l)l=l or{}a.expect(1,k,"table")a.expect(2,i,"string","table")a.field(l,"id","string","nil")a.field(l,"textColor","number","nil")a.field(l,"backgroundColor","number","nil")if l.textColor~=nil then a.range(l.textColor,1)end;if l.backgroundColor~=nil then a.range(l.backgroundColor,1)end;j.super.init(self,l)self.label=i;self.anchor=k;self.textColor=l.textColor;self.backgroundColor=l.backgroundColor;self:validate()return self end;function j:validate(m)j.super.validate(self,m)a.field(self,"label","string","table")a.field(self,"anchor","table")a.field(self,"textColor","number","nil")a.field(self,"backgroundColor","number","nil")if not g.isAnchor(self.anchor)then error("anchor much be of type Anchor")end end;function j:handle(m,n,...)local n,o=b.cleanEventArgs(n,...)a.expect(1,m,"table")a.expect(2,n,"string")g.requireOutput(m)if e.l.Events.UI[n]and o[1].objId==self.id then if n==e.e.Events.text_update then local p=o[1].oldLabel;local q=o[1].newLabel;if#q<#p then self.label=string.rep(" ",#p)local r=self.backgroundColor;local s=self.textColor;self.backgroundColor=m.getBackgroundColor()self.textColor=m.getBackgroundColor()self:render(m)self.backgroundColor=r;self.textColor=s end;self.label=q;self:render(m)return true end end;return false end;function j:getLines()local t;if type(self.label)=="string"then t={self.label}else t=b.copy(self.label)end;local u=0;for v,w in ipairs(t)do local x,y=c.getTextColor(w)local z={text=x,color=y}if#x>u then u=#x end;t[v]=z end;return t,u end;function j:render(m)if not self.visible then return end;a.expect(1,m,"table","nil")if m==nil then m=term end;local s=m.getTextColor()local r=m.getBackgroundColor()local A,B=m.getCursorPos()j.super.render(self,m)local t,C=self:getLines()local D=self.anchor:getPos(m,C,#t)local E=g.getColor(self.backgroundColor,m.getBackgroundColor())for v=0,#t-1,1 do local w=t[v+1]local F=g.getColor(self.textColor,w.color,m.getTextColor())m.setTextColor(F)m.setBackgroundColor(E)m.setCursorPos(D.x,D.y+v)m.write(w.text)end;m.setTextColor(s)m.setBackgroundColor(r)m.setCursorPos(A,B)end;function j:update(m,i)a.expect(1,m,"table")a.expect(2,i,"string","table")g.requireOutput(m)if self.label~=i then local n=f.TextUpdateEvent(m,self.id,self.label,i)self.label=i;os.queueEvent(n.name,n)end end;function j:bind(m)return h(m,self)end;return j
